{"meta":{"title":"我是皮蛋我自豪","subtitle":"wspdwzh","description":"","author":"peter？","url":"http://Petertan303.github.io","root":"/"},"pages":[{"title":"about","date":"2023-01-16T14:00:14.000Z","updated":"2023-01-16T16:09:06.379Z","comments":false,"path":"about/index.html","permalink":"http://petertan303.github.io/about/index.html","excerpt":"","text":""}],"posts":[{"title":"试图学习CSS","slug":"试图学习CSS","date":"2023-01-20T03:54:55.000Z","updated":"2023-01-20T04:33:43.282Z","comments":true,"path":"2023/01/20/试图学习CSS/","link":"","permalink":"http://petertan303.github.io/2023/01/20/%E8%AF%95%E5%9B%BE%E5%AD%A6%E4%B9%A0CSS/","excerpt":"","text":"基本语法格式CSS &#x3D; 选择器 + 声明块 例： 1234p &#123; color: red; text-align: center;&#125; p 为选择器，指向&lt;p&gt;标签。属性 - 冒号 - 属性值 - 分号。 注释同 C ，/*注释*/。 CSS的使用 外部CSS 例如，html内的一句&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;mystyle.css&quot;&gt;，指向mystyle.css： 12345678body &#123; background-color: lightblue;&#125;h1 &#123; color: navy; margin-left: 20px;&#125; 内部css html文件中，head部分的&lt;style&gt;元素中进行定义。 123456789101112131415161718192021&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;style&gt;body &#123; background-color: linen;&#125;h1 &#123; color: maroon; margin-left: 40px;&#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;This is a heading&lt;/h1&gt;&lt;p&gt;This is a paragraph.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt; 行内css（内联样式） 将style属性赋予某个元素。 123456789&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;body&gt;&lt;h1 style=&quot;color:blue;text-align:center;&quot;&gt;This is a heading&lt;/h1&gt;&lt;p style=&quot;color:red;&quot;&gt;This is a paragraph.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt; 层叠顺序当为某个 HTML 元素指定了多个样式时，会使用哪种样式呢？ 页面中的所有样式将按照以下规则“层叠”为新的“虚拟”样式表，其中第一优先级最高： 1.行内样式（在 HTML 元素中） 2.外部和内部样式表（在 head 部分） 3.浏览器默认样式 因此，行内样式具有最高优先级，并且将覆盖外部和内部样式以及浏览器默认样式。 css内容颜色 颜色名 赋颜色的一种方式 背景色 12&lt;h1 style=&quot;background-color:DodgerBlue;&quot;&gt;China&lt;/h1&gt;&lt;p style=&quot;background-color:Tomato;&quot;&gt;China is a great country!&lt;/p&gt; 文本颜色 123&lt;h1 style=&quot;color:Tomato;&quot;&gt;China&lt;/h1&gt;&lt;p style=&quot;color:DodgerBlue;&quot;&gt;China is a great country!&lt;/p&gt;&lt;p style=&quot;color:MediumSeaGreen;&quot;&gt;China, officially the People&#x27;s Republic of China...&lt;/p&gt; 边框颜色 123&lt;h1 style=&quot;border:2px solid Tomato;&quot;&gt;Hello World&lt;/h1&gt;&lt;h1 style=&quot;border:2px solid DodgerBlue;&quot;&gt;Hello World&lt;/h1&gt;&lt;h1 style=&quot;border:2px solid Violet;&quot;&gt;Hello World&lt;/h1&gt; 颜色值 使用RGB值、HEX值、HSL值、RGBA值或者HSLA值来指定颜色。 123456&lt;h1 style=&quot;background-color:rgb(255, 99, 71);&quot;&gt;...&lt;/h1&gt;&lt;h1 style=&quot;background-color:#ff6347;&quot;&gt;...&lt;/h1&gt;&lt;h1 style=&quot;background-color:hsl(9, 100%, 64%);&quot;&gt;...&lt;/h1&gt;&lt;h1 style=&quot;background-color:rgba(255, 99, 71, 0.5);&quot;&gt;...&lt;/h1&gt;&lt;h1 style=&quot;background-color:hsla(9, 100%, 64%, 0.5);&quot;&gt;...&lt;/h1&gt; 直接使用RGB：rgb(red, green, blue) 使用RGBA：有不透明度的RGB 背景12345678910111213body &#123; background-color: lightblue;/* 背景色 */ opacity: 0.3;/* 不透明度 */ background-image: url(&quot;paper.gif&quot;);/* 背景图像 */&#125;/* 以及 */body &#123; background-image: url(&quot;tree.png&quot;); background-repeat: no-repeat; background-position: right top; background-attachment: fixed;&#125; 简写： 123body &#123; background: #ffffff url(&quot;tree.png&quot;) no-repeat right top;&#125; 在使用简写属性时，属性值的顺序为： background-color background-image background-repeat background-attachment background-position 轮廓（不同于边框）CSS 拥有如下轮廓属性： outline-style outline-color outline-width outline-offset outline 文本 文本对齐 文本方向 垂直对齐 文字装饰 大小写自动转换 缩进 字符间距 行高 字间距 文字阴影 斜体 粗细 大小 CSS 盒子模型CSS 选择器布局方式CSS3","categories":[],"tags":[{"name":"笔记 未完待续","slug":"笔记-未完待续","permalink":"http://petertan303.github.io/tags/%E7%AC%94%E8%AE%B0-%E6%9C%AA%E5%AE%8C%E5%BE%85%E7%BB%AD/"}]},{"title":"2023年1月20日","slug":"2023年1月20日","date":"2023-01-20T03:42:26.000Z","updated":"2023-01-20T03:58:57.790Z","comments":true,"path":"2023/01/20/2023年1月20日/","link":"","permalink":"http://petertan303.github.io/2023/01/20/2023%E5%B9%B41%E6%9C%8820%E6%97%A5/","excerpt":"","text":"关于阿里云ESC的应用本质是一个可租赁服务器。要用于搭建博客，需要安装Apache（服务器软件）、MariaDB数据库（或者MySql）、PHP，然后通过WordPress完成博客的搭建。 CSS的学习笔记","categories":[],"tags":[{"name":"日志","slug":"日志","permalink":"http://petertan303.github.io/tags/%E6%97%A5%E5%BF%97/"}]},{"title":"总结一下hexo-theme-fluid的使用方法","slug":"总结一下hexo-theme-fluid的使用方法","date":"2023-01-17T02:16:35.000Z","updated":"2023-01-17T03:32:21.729Z","comments":true,"path":"2023/01/17/总结一下hexo-theme-fluid的使用方法/","link":"","permalink":"http://petertan303.github.io/2023/01/17/%E6%80%BB%E7%BB%93%E4%B8%80%E4%B8%8Bhexo-theme-fluid%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/","excerpt":"来看看罢？","text":"全局 设置文章默认封面：12post: default_index_img: /img/example.jpg 代码块设置：123456789101112code: copy_btn: true highlight: enable: true line_number: true lib: &quot;highlightjs&quot; highlightjs: style: &#x27;Github Gist&#x27; bg_color: false prismjs: style: &quot;default&quot; preprocess: true copy_btn: 是否开启复制代码的按钮 line_number: 是否开启行号 highlight: 是否开启代码高亮 lib: 选择生成高亮的库，可选项: highlightjs、prismjs，对应下面两组配置，高亮的配置说明具体见主题配置中的注释 首页 大标题：Slogan(打字机)，配置方法是1234index: slogan: enable: true text: 这是一条 Slogan 每篇文章 指定摘要：12# 在文章开头加上：excerpt: 这是摘要 隐藏文章：12# 在文章开头加上：hide: true 手动置顶：12# 在文章开头加上：sticky: 100 在首页的封面：12# 在文章开头加上：index_img: /img/example.jpg 文章头图：12# 在文章开头加上：banner_img: /img/post_banner.jpg 手动置顶：12# 在文章开头加上：sticky: 100 勾选框：1&#123;% cb 文字, 是否已勾选, 是否内联 %&#125; 这是一个勾选框 按钮：1&#123;% btn 链接, text, title %&#125; text 组图：1234567&#123;% gi total n1-n2-... %&#125; ![](url) ![](url) ![](url) ![](url) ![](url)&#123;% endgi %&#125; 特殊页面 About 页","categories":[],"tags":[{"name":"日志","slug":"日志","permalink":"http://petertan303.github.io/tags/%E6%97%A5%E5%BF%97/"}]},{"title":"Hello World？Peter Tan！！","slug":"hello-world","date":"2023-01-16T13:39:17.273Z","updated":"2023-01-16T13:39:17.273Z","comments":true,"path":"2023/01/16/hello-world/","link":"","permalink":"http://petertan303.github.io/2023/01/16/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"我超，原","slug":"图片测试","date":"2023-01-16T12:19:36.000Z","updated":"2023-01-17T06:39:12.948Z","comments":true,"path":"2023/01/16/图片测试/","link":"","permalink":"http://petertan303.github.io/2023/01/16/%E5%9B%BE%E7%89%87%E6%B5%8B%E8%AF%95/","excerpt":"测试一下添加图片！！","text":"图片测试……？能看见吗？ 实际操作时，hexo 会给文件夹套进一串文件夹嵌套，比如说今天是2023年1月16日，套完前面会多一个2023&#x2F;01&#x2F;16&#x2F; 操作方法： 安装插件 hexo-asset-imageconfig 里的 post_asset_folder 改为 ture然后新生成的 md 就有了伴生图片文件夹，把图片放进去要使用的话，日期 + 文件夹 + 文件名例如：![图片](2023/01/16/图片测试/83-2.jpg &quot;&quot;) 有了插件 hexo-renderer-marked 的话，可以直接用图片名字，不需要日期和文件夹。 官方方法不使用中括号小括号的 md 语法，而是使用官方的 &#123;% asset_img example.jpg This is an example image %&#125; 现在使用了fluid主题放在source底下的img文件夹会被一并导出，使用img内图片：&#x2F;img&#x2F;asdasd.jpg 然后，事实证明，现在不能直接用图片名字了。 综上，要使用图片，就放在 source&#x2F;img&#x2F; 下，使用的时候引用 ![](img/图片 &quot;&quot;)，要想并排显示需要套一个 &#123;% gi 4 4 %&#125;` 和 `&#123;% endgi %&#125;。&#123;% asset_img example.jpg This is an example image %&#125; 似乎不能用了。 这是按钮NGA!!","categories":[],"tags":[{"name":"test","slug":"test","permalink":"http://petertan303.github.io/tags/test/"}]},{"title":"2022年10月17日","slug":"2022年10月17日","date":"2023-01-16T09:29:47.000Z","updated":"2023-01-16T10:10:08.920Z","comments":true,"path":"2023/01/16/2022年10月17日/","link":"","permalink":"http://petertan303.github.io/2023/01/16/2022%E5%B9%B410%E6%9C%8817%E6%97%A5/","excerpt":"","text":"20点28分：之前看nga，现在看x岛，看疯了。傻逼。 摸了一晚上🐟，一开始打算做大物雨课堂，但并没有做。想做数据结构，也没有。刚刚发现大物雨课堂已经在十六号晚上截止了。我，傻逼。 六天前开始玩碧蓝航线。肝度很大，代理不稳定等等，任务多，这两天少了，但是为了配队还是在看它资料。 看了一会儿博客相关。typechowordpresshexo比较底层点：mysqlgitlab apipost：做apipostman 买域名（阿里云即可）远程空间（虚拟&#x2F;服务器&#x2F;借的）安装网站（上传网站安装包）“宝塔面板” 安了个node.js，真的小。npm 是 Node.js 的包管理工具，用来安装各种 Node.js 的扩展。据说git是为linux准备的。难怪，win下教程少。发现notepad++不能被识别为默认程序。傻逼。 Xshell是一款功能强大的终端模拟器，支持SSH1，SSH2，SFTP，TELNET，RLOGIN和SERIAL。xshell可以远程连接Linux的ssh客户端，也就是“ssh客户机”（但是收费啊） multipass的ubuntu虚拟机不会用。上次瞎搞了想改远程源，结果妈的没成功偷鸡不成蚀把米。卑微。现在的状态似乎是能联网不能安装包。 之前的ai绘画，特别为了他安了包，但是下torch似乎py只能用它附带的那个版本，而那个版本没装torch，下载起来慢的离谱。找个机会安了。 感觉很几把炫酷、甚至可以尝试的东西：1、ai绘画2、博客：域名挺便宜。顶多十年八百。3、附带的，linux下的一堆操作4、qt，c的被我卸掉了，还有pyqt可以用5、哦，还要很久之前，阿米娅机器人，基于啥来着 opengl：一个图形库，api， 博客园好几把炫酷啊 我在unity里面有个node.js？？ps里面也有一个？？xmind也有？？vs里面也有，好家伙但是新安装的有个shell界面。 condaanacondapycmdpip 廖雪峰的官方网站菜鸟教程qt还有个开源社区看雪-逆向工程社区 差点忘了我还在学c++ 妈的，别忘了作业傻逼大物这是第二次错过了别忘了数字逻辑电路！！！ cnss他们好他妈牛逼啊全是不眠不休的卷王吗！还有立人班！！被请求然后说两点开始干活？？是人？ cf（codeforce）和leetcode multipass的使用：Usage: multipass [options] 用法：multipass 加 命令Create, control and connect to Ubuntu instances.操作 ubuntu 实例。 This is a command line utility for multipass, a service that manages Ubuntu instances.multipass 命令行 Options: -?, -h, –help Displays help on commandline options. 帮助 –help-all Displays help including Qt specific options. 有qt的帮助 -v, –verbose Increase logging verbosity. Repeat the ‘v’ in the short option for more detail. Maximum verbosity is obtained with 4 (or more) v’s, i.e. -vvvv.不知道是什么 Available commands: alias Create an alias 创建别名（备注） aliases List available aliases 列出别名 authenticate Authenticate client 证实客户？ delete Delete instances 删掉实例 exec Run a command on an instance 在实例上跑命令 find Display available images to create instances from 显示可用图像以从中创建实例？ get Get a configuration setting 获取配置设置 help Display help about a command 单个命令的help info Display information about instances 实例信息 launch Create and start an Ubuntu instance 创建实例 list List all available instances 列出实例 mount Mount a local directory in the instance 在实例中装载本地目录？ networks List available network interfaces 列出可用网络接口 purge Purge all deleted instances permanently 永久清除所有实例 recover Recover deleted instances 恢复被删除的实例 restart Restart instances 重启实例 set Set a configuration setting 设实例信息 shell Open a shell on a running instance 开一个shell start Start instances 开始实例 stop Stop running instances 停止实例 suspend Suspend running instances 暂停实例 transfer Transfer files between the host and instances 在主机和实例之间传文件（！！！！） umount Unmount a directory from an instance 在实例中卸载本地目录？ unalias Remove an alias 移除别名 version Show version details 显示版本 总结： 操作别名 删除停止暂停启动创建重启实例 在主机实例之间传文件 multipass本身相关","categories":[],"tags":[{"name":"日志","slug":"日志","permalink":"http://petertan303.github.io/tags/%E6%97%A5%E5%BF%97/"}]},{"title":"2023年1月16日","slug":"2023年1月16日","date":"2023-01-16T09:28:49.000Z","updated":"2023-01-16T13:39:12.077Z","comments":true,"path":"2023/01/16/2023年1月16日/","link":"","permalink":"http://petertan303.github.io/2023/01/16/2023%E5%B9%B41%E6%9C%8816%E6%97%A5/","excerpt":"","text":"hexo 使用： 12345678$ cd myblog//首先进入myblog文件夹$ hexo clear//然后清理之前残留的网页$ hexo g//然后生成网页$ hexo d //然后推送到GitHub上 markdown 本身使用 标题：井号，或 “ &#x3D;&#x3D;&#x3D; ” ， 或 “ — ” 段落：一行空白行，不应使用 tab 或者空格。 换行：段尾加两个空格，并换行。或者使用 标签。 粗体：两个星号或者两个下划线。 斜体：一个星号或一个下划线。 引用：在段落前添加 &gt; 符号。要引用多个段落，应给空白行也添加 &gt; 符号。 嵌套引用：额外加一个 &gt; 符号。 列表：数字和英文句号。 例如： 阿三大苏打 阿三大苏打 阿三大苏打 无序列表：段前加 - 或 * 或 + 。要保持缩进，需要添加四个空格，或一个 tab 。 代码块：四个空格或一个 tab 。 短单词表示为代码：用 ‘ 包裹。一段代码包含单引号：这段代码应用 &#96;&#96; 包裹。围栏代码块：加入 &#96;&#96;&#96; 包裹。 分割线： 三个星号、三个 - 、三个下划线，并在此之后添加空白行。 链接：中括号包含文本，小括号包含链接。所谓 title ， 即是鼠标悬浮在链接上的时候显示的东西，可以用双引号写在小括号结尾。hhh对于一般的链接，用尖括号框起来即可。https://nga.178.com 图片：![这是图片](/assets/img/philly-magic-garden.jpg &quot;Magic Gardens&quot;) 或者有链接的图片：[![沙漠中的岩石图片](/assets/img/shiprock.jpg &quot;Shi prock&quot;)](https://markdown.com.cn) 如何将 Windows 下文件导入 wsl wsl 中的 &#x2F;mnt 文件夹，对应 Windows 的计算机。例如，想要引用 D:\\桌面\\临时 里面的 103041518_p0.jpg，对应过来就是 &#x2F;mnt&#x2F;d&#x2F;桌面&#x2F;临时&#x2F;103041518_p0.jpg然后复制到 wsl：cp &#x2F;mnt&#x2F;d&#x2F;桌面&#x2F;临时&#x2F;103041518_p0.jpg ~&#x2F;myblog&#x2F;source&#x2F;_posts&#x2F;图片测试 看看效果？ Git 的使用 git commit &lt;文件&gt; （然后需要写提交日志） git pull git push","categories":[],"tags":[]},{"title":"my first blog test?","slug":"博客测试1","date":"2023-01-16T05:30:02.000Z","updated":"2023-01-16T09:51:09.351Z","comments":true,"path":"2023/01/16/博客测试1/","link":"","permalink":"http://petertan303.github.io/2023/01/16/%E5%8D%9A%E5%AE%A2%E6%B5%8B%E8%AF%951/","excerpt":"","text":"Hello, world! 1//这是一个代码块 标题网址测试：nga","categories":[],"tags":[{"name":"test","slug":"test","permalink":"http://petertan303.github.io/tags/test/"}]}],"categories":[],"tags":[{"name":"笔记 未完待续","slug":"笔记-未完待续","permalink":"http://petertan303.github.io/tags/%E7%AC%94%E8%AE%B0-%E6%9C%AA%E5%AE%8C%E5%BE%85%E7%BB%AD/"},{"name":"日志","slug":"日志","permalink":"http://petertan303.github.io/tags/%E6%97%A5%E5%BF%97/"},{"name":"test","slug":"test","permalink":"http://petertan303.github.io/tags/test/"}]}